#define _CRT_SECURE_NO_WARNINGS 
#include<stdio.h>

//计算器
//void menu()
//{
//	printf("**************************\n");
//	printf("**************************\n");
//	printf("***  1.Add      2.Sub  ***\n");
//	printf("***  3.Mul      4.Div  ***\n");
//	printf("***       0.exit       ***\n");
//	printf("**************************\n");
//	printf("**************************\n");
//}
//int Add(int x, int y)
//{
//	return x + y;
//}
//int Sub(int x, int y)
//{
//	return x - y;
//}
//int Mul(int x, int y)
//{
//	return x * y;
//}
//int Div(int x, int y)
//{
//	return x / y;
//}
//
//int main()
//{
//	int x = 0;
//	int y = 0;
//	int input = 0;
//	do
//	{
//		menu();
//		printf("请选择：");
//		scanf("%d", &input);
//		printf("请输入两个数：");
//		scanf("%d%d", &x, &y);
//
//		switch (input)
//		{
//		case 1:
//			printf("%d\n", Add(x, y));
//			break;
//		case 2:
//			printf("%d\n", Sub(x, y));
//			break;
//		case 3:
//			printf("%d\n", Mul(x, y));
//			break;
//		case 4:
//			printf("%d\n", Div(x, y));
//		case 0:
//			printf("exit");
//			break;
//		default:
//			printf("error");
//			break;
//		}
//	} 
//	while (input);
//}

//qsort用法
int cmp_int(const void* e1, const void* e2)
{
	return *(int*)e1 - *(int*)e2;
}
test1()
{
	int arr[10] = { 9,8,7,6,5,4,3,2,1,0 };
	int sz = sizeof(arr) / sizeof(arr[0]);
	qsort(arr, sz, sizeof(arr[0]), cmp_int);
	for (int i = 0; i < sz; i++)
	{
		printf("%d ", arr[i]);
	}
}
int cmp_float(const void*e1,const void*e2)
{
	if (*(float*)e1 == *(float*)e2)
		return 0;
	else if (*(float*)e1 > *(float*)e2)
		return 1;
	else
		return -1;
}
test2()
{
	float f[] = { 9.0,8.0,7.0,6.0,5.0 };
	int sz2 = sizeof(f) / sizeof(f[0]);
	qsort(f, sz2, sizeof(f[0]), cmp_float);
	for (int j = 0; j < sz2; j++)
	{
		printf("%f ", f[j]);
	}
}
int main()
{
	test1();
	printf("\n");
	test2();
	return 0;
}
